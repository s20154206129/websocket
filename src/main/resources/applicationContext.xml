<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


	<!-- 自动扫描 如果 service接口包 和service实现包前缀 不相同的 话 com.yyf.service 接口包 和 com.yyf.service.lmpl 
		有 共同的前缀 那么 就分别扫描 两个包 -->
	<!-- 引入属性文件 -->
	<!-- <context:property-placeholder location="classpath:jdbc.properties" 
		/> -->

	<context:component-scan base-package="org.xdemo.example.websocket" /><!--包涵context:annotion-config -->

	<!-- jdbc配置 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:database.properties" />
	</bean>


	<!-- 配置数据源 阿里云 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${driverClass}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>

	<!-- 配置mybatis的sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath*:org/xdemo/example/websocket/mapping/*.xml" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<!-- mapper扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.xdemo.example.websocket.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>



	<!--配置bean,只有这两个bean需要配置是因为在本项目中Spring使用了注解形式，无需再xml中配置bean但是因为在Server中无法 
		使用注解的形式获取MessageService,只能通过配置bean方式来获取 -->
<!-- 	<bean id="messageService" class="com.main.service.MessageServiceImplement"></bean>
	<bean id="userService" class="com.main.service.UserServiceImplement"></bean> -->

	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

</beans>